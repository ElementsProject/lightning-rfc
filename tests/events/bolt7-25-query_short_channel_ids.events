# Tests for query_short_channel_ids.

include setup.incl
* block: $BLOCK_102

# Our three channels, and four nodes.
+ block: $BLOCK_103
+ block: $BLOCK_109
+ block: $BLOCK_115

+ connect: privkey=0000000000000000000000000000000000000000000000000000000000000003
+ expect-send: type=init
+ recv: type=init localfeatures= globalfeatures=
# They can send this, we'll ignore it.
+ maybe-send: type=gossip_timestamp_filter

# Channel 103x1x0 (between 002 and 003), only one update, both node_announce
+ recv: $CHAN_ANN_103x1x0
+ recv: $CHAN_UPDATE_103x1x0_002
+ recv: $NODE_ANN_002
+ recv: $NODE_ANN_003

# Channel 109x1x0 (between 004 and 005): both updates, only one node_announce
+ recv: $CHAN_ANN_109x1x0
# Node-announce first is legal
+ recv: $NODE_ANN_004
+ recv: $CHAN_UPDATE_109x1x0_004
+ recv: $CHAN_UPDATE_109x1x0_005

# Channel 115x1x0 (between 003 and 004): no updates.
+ recv: $CHAN_ANN_115x1x0

# New peer connects, with gossip_query option.
+ connect: privkey=0000000000000000000000000000000000000000000000000000000000000005
+ expect-send: type=init
+ recv: type=init localfeatures=80 globalfeatures=
+ maybe-send: type=gossip_timestamp_filter

# Query for non-existent channels (104x1x0 105x1x0 106x1x0 107x1x0)
+ recv: type=query_short_channel_ids chain_hash=06226e46111a0b59caaf126043eb5bbf28c34f3a5e332a1fc7b2b73cf188910f encoded_short_ids=000000680000010000000069000001000000006a000001000000006b0000010000
+ expect-send: type=reply_short_channel_ids_end

# zlib version
+ recv: type=query_short_channel_ids chain_hash=06226e46111a0b59caaf126043eb5bbf28c34f3a5e332a1fc7b2b73cf188910f encoded_short_ids=01789c6360c86060606400824c289d05a5b3c134001de001ab
+ expect-send: type=reply_short_channel_ids_end

# Query for one channel (103x1x0)
+ recv: type=query_short_channel_ids chain_hash=06226e46111a0b59caaf126043eb5bbf28c34f3a5e332a1fc7b2b73cf188910f encoded_short_ids=000000670000010000
+ expect-send: $CHAN_ANN_103x1x0
+ Any order:
    * expect-send: $CHAN_UPDATE_103x1x0_002
    * expect-send: $NODE_ANN_002
    * expect-send: $NODE_ANN_003
+ expect-send: type=reply_short_channel_ids_end

# Query for two channels (103x1x0 109x1x0)
+ recv: type=query_short_channel_ids chain_hash=06226e46111a0b59caaf126043eb5bbf28c34f3a5e332a1fc7b2b73cf188910f encoded_short_ids=00000067000001000000006d0000010000
+ One of: # the channel_announcements must lead, then it gets messy.
    * expect-send: $CHAN_ANN_103x1x0
    + Any order: # Not really *any* order, since ann must predate update.
        * expect-send: $CHAN_UPDATE_103x1x0_002
        * expect-send: $NODE_ANN_002
        * expect-send: $NODE_ANN_003
        * expect-send: $CHAN_ANN_109x1x0
        * expect-send: $CHAN_UPDATE_109x1x0_004
        * expect-send: $CHAN_UPDATE_109x1x0_005
        * expect-send: $NODE_ANN_004
    * expect-send: $CHAN_ANN_109x1x0
    + Any order:
        * expect-send: $CHAN_ANN_103x1x0
        * expect-send: $CHAN_UPDATE_103x1x0_002
        * expect-send: $NODE_ANN_002
        * expect-send: $NODE_ANN_003
        * expect-send: $CHAN_UPDATE_109x1x0_004
        * expect-send: $CHAN_UPDATE_109x1x0_005
        * expect-send: $NODE_ANN_004
+ expect-send: type=reply_short_channel_ids_end

# Query for specific things only, if supported.

# Announce messages only.
    * recv: type=query_short_channel_ids chain_hash=06226e46111a0b59caaf126043eb5bbf28c34f3a5e332a1fc7b2b73cf188910f encoded_short_ids=00000067000001000000006d0000010000 tlvs=0103000101 option_gossip_queries_ex
    # zlib-encoded variant
    * recv: type=query_short_channel_ids chain_hash=06226e46111a0b59caaf126043eb5bbf28c34f3a5e332a1fc7b2b73cf188910f encoded_short_ids=00000067000001000000006d0000010000 tlvs=010b01789c6364040000050003 option_gossip_queries_ex
+ Any order: option_gossip_queries_ex
    * expect-send: $CHAN_ANN_103x1x0 option_gossip_queries_ex
    * expect-send: $CHAN_ANN_109x1x0 option_gossip_queries_ex
+ expect-send: type=reply_short_channel_ids_end option_gossip_queries_ex

# Node 1 channel_update messages only.
    * recv: type=query_short_channel_ids chain_hash=06226e46111a0b59caaf126043eb5bbf28c34f3a5e332a1fc7b2b73cf188910f encoded_short_ids=00000067000001000000006d0000010000 tlvs=0103000202 option_gossip_queries_ex
    # zlib-encoded variant
    * recv: type=query_short_channel_ids chain_hash=06226e46111a0b59caaf126043eb5bbf28c34f3a5e332a1fc7b2b73cf188910f encoded_short_ids=00000067000001000000006d0000010000 tlvs=010b01789c6362020000080005 option_gossip_queries_ex

+ Any order: option_gossip_queries_ex
    * expect-send: $CHAN_UPDATE_103x1x0_002 option_gossip_queries_ex
    * expect-send: $CHAN_UPDATE_109x1x0_005 option_gossip_queries_ex
+ expect-send: type=reply_short_channel_ids_end option_gossip_queries_ex

# Node 2 channel_update messages only.
    * recv: type=query_short_channel_ids chain_hash=06226e46111a0b59caaf126043eb5bbf28c34f3a5e332a1fc7b2b73cf188910f encoded_short_ids=00000067000001000000006d0000010000 tlvs=0103000404 option_gossip_queries_ex
    # zlib-encoded variant
    * recv: type=query_short_channel_ids chain_hash=06226e46111a0b59caaf126043eb5bbf28c34f3a5e332a1fc7b2b73cf188910f encoded_short_ids=00000067000001000000006d0000010000 tlvs=010b01789c63610100000e0009 option_gossip_queries_ex

+ expect-send: $CHAN_UPDATE_109x1x0_004 option_gossip_queries_ex
+ expect-send: type=reply_short_channel_ids_end option_gossip_queries_ex

# Node 1 announcements only.
    * recv: type=query_short_channel_ids chain_hash=06226e46111a0b59caaf126043eb5bbf28c34f3a5e332a1fc7b2b73cf188910f encoded_short_ids=00000067000001000000006d0000010000 tlvs=0103000808 option_gossip_queries_ex
    # zlib-encoded variant
    * recv: type=query_short_channel_ids chain_hash=06226e46111a0b59caaf126043eb5bbf28c34f3a5e332a1fc7b2b73cf188910f encoded_short_ids=00000067000001000000006d0000010000 tlvs=010b01789ce3e00000001a0011 option_gossip_queries_ex

+ expect-send: $NODE_ANN_002 option_gossip_queries_ex
+ expect-send: type=reply_short_channel_ids_end option_gossip_queries_ex

# Node 2 announcements only.
    * recv: type=query_short_channel_ids chain_hash=06226e46111a0b59caaf126043eb5bbf28c34f3a5e332a1fc7b2b73cf188910f encoded_short_ids=00000067000001000000006d0000010000 tlvs=0103001010 option_gossip_queries_ex
    # zlib-encoded variant
    * recv: type=query_short_channel_ids chain_hash=06226e46111a0b59caaf126043eb5bbf28c34f3a5e332a1fc7b2b73cf188910f encoded_short_ids=00000067000001000000006d0000010000 tlvs=010b01789c1310000000320021 option_gossip_queries_ex

+ Any order: option_gossip_queries_ex
    * expect-send: $NODE_ANN_003 option_gossip_queries_ex
    * expect-send: $NODE_ANN_004 option_gossip_queries_ex
+ expect-send: type=reply_short_channel_ids_end option_gossip_queries_ex
