# Tests for gossip_timestamp_filter.

# Variables for some standard gossiping messages.
include setup.incl
* block: $BLOCK_102

+ connect: privkey=0000000000000000000000000000000000000000000000000000000000000003
+ expect-send: type=init
+ recv: type=init localfeatures= globalfeatures=

+ block: $BLOCK_103

+ recv: $CHAN_ANN_103x1x0
+ recv: $NODE_ANN_002

# New peer connects, asks for gossip_timestamp_filter=all.  We *won't* relay channel_announcement, as there is no channel_update.
+ connect: privkey=0000000000000000000000000000000000000000000000000000000000000005
+ expect-send: type=init
+ recv: type=init localfeatures= globalfeatures=
+ recv: type=gossip_timestamp_filter
   chain_hash=06226e46111a0b59caaf126043eb5bbf28c34f3a5e332a1fc7b2b73cf188910f
   first_timestamp=0
   timestamp_range=4294967295
+ must-not-send: type=channel_announcement
+ must-not-send: type=node_announcement
+ disconnect:

+ recv: $CHAN_UPDATE_103x1x0_002

# New peer connects, asks for gossip_timestamp_filter=all.  update and node announcement will be relayed.
+ connect: privkey=0000000000000000000000000000000000000000000000000000000000000005
+ expect-send: type=init
+ recv: type=init localfeatures= globalfeatures=
+ recv: type=gossip_timestamp_filter
   chain_hash=06226e46111a0b59caaf126043eb5bbf28c34f3a5e332a1fc7b2b73cf188910f
   first_timestamp=0
   timestamp_range=4294967295
+ expect-send: $CHAN_ANN_103x1x0
+ Any order:
    * expect-send: $CHAN_UPDATE_103x1x0_002
    * expect-send: $NODE_ANN_002
+ disconnect:

# BOLT 7:
# The receiver:
#  - SHOULD send all gossip messages whose `timestamp` is greater or
#    equal to `first_timestamp`, and less than `first_timestamp` plus
#    `timestamp_range`.

+ connect: privkey=0000000000000000000000000000000000000000000000000000000000000005
+ expect-send: type=init
+ recv: type=init localfeatures= globalfeatures=
+ recv: type=gossip_timestamp_filter
   chain_hash=06226e46111a0b59caaf126043eb5bbf28c34f3a5e332a1fc7b2b73cf188910f
   first_timestamp=1000
   timestamp_range=1565586763
+ must-not-send: type=channel_announcement
+ must-not-send: type=channel_update
+ must-not-send: type=node_announcement
+ disconnect:

+ connect: privkey=0000000000000000000000000000000000000000000000000000000000000005
+ expect-send: type=init
+ recv: type=init localfeatures= globalfeatures=
+ recv: type=gossip_timestamp_filter
   chain_hash=06226e46111a0b59caaf126043eb5bbf28c34f3a5e332a1fc7b2b73cf188910f
   first_timestamp=1565587764
   timestamp_range=4294967295
+ must-not-send: type=channel_announcement
+ must-not-send: type=channel_update
+ must-not-send: type=node_announcement
+ disconnect:

# These two succeed in getting the gossip, then stay connected for next test.
+ connect: privkey=0000000000000000000000000000000000000000000000000000000000000005
+ expect-send: type=init
+ recv: type=init localfeatures= globalfeatures=
+ recv: type=gossip_timestamp_filter
   chain_hash=06226e46111a0b59caaf126043eb5bbf28c34f3a5e332a1fc7b2b73cf188910f
   first_timestamp=1565587763
   timestamp_range=4294967295
+ expect-send: $CHAN_ANN_103x1x0
+ Any order:
    * expect-send: $CHAN_UPDATE_103x1x0_002
    * expect-send: $NODE_ANN_002

+ connect: privkey=0000000000000000000000000000000000000000000000000000000000000006
+ expect-send: type=init
+ recv: type=init localfeatures= globalfeatures=
+ recv: type=gossip_timestamp_filter
   chain_hash=06226e46111a0b59caaf126043eb5bbf28c34f3a5e332a1fc7b2b73cf188910f
   first_timestamp=1000
   timestamp_range=1565586764
+ expect-send: $CHAN_ANN_103x1x0
+ Any order:
    * expect-send: $CHAN_UPDATE_103x1x0_002
    * expect-send: $NODE_ANN_002

# BOLT 7:
#  - SHOULD restrict future gossip messages to those whose `timestamp`
#    is greater or equal to `first_timestamp`, and less than
#    `first_timestamp` plus `timestamp_range`.

+ block: $BLOCK_109

+ recv: conn=0000000000000000000000000000000000000000000000000000000000000003
   $CHAN_ANN_109x1x0

+ recv: conn=0000000000000000000000000000000000000000000000000000000000000003
   $CHAN_UPDATE_109x1x0_004

+ recv: conn=0000000000000000000000000000000000000000000000000000000000000003 
   $CHAN_UPDATE_109x1x0_005

+ recv: conn=0000000000000000000000000000000000000000000000000000000000000003 
   $NODE_ANN_004

# 005's filter covers this, 006's doesn't.
+ expect-send: conn=0000000000000000000000000000000000000000000000000000000000000005
   $CHAN_ANN_109x1x0

+ Any order:
    * expect-send: conn=0000000000000000000000000000000000000000000000000000000000000005
       $CHAN_UPDATE_109x1x0_004
    * expect-send: conn=0000000000000000000000000000000000000000000000000000000000000005
       $CHAN_UPDATE_109x1x0_005
    * expect-send: conn=0000000000000000000000000000000000000000000000000000000000000005
       $NODE_ANN_004

+ must-not-send: conn=0000000000000000000000000000000000000000000000000000000000000006
   type=channel_announcement
+ must-not-send: conn=0000000000000000000000000000000000000000000000000000000000000006
   type=channel_update
+ must-not-send: conn=0000000000000000000000000000000000000000000000000000000000000006
   type=node_announcement
